name: Laravel Docker Deploy with Vault

on:
  push:
    branches:
      - master

jobs:
  test-and-deploy:
    name: Test and Deploy
    runs-on: ubuntu-latest

    env:
      APP_ENV: testing

    steps:
      # Step 1: Check out code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 3: Fetch HCP API Token
      - name: Fetch HCP API Token
        id: fetch-hcp-token
        env:
          HCP_CLIENT_ID: ${{ secrets.HCP_CLIENT_ID }}
          HCP_CLIENT_SECRET: ${{ secrets.HCP_CLIENT_SECRET }}
        run: |
          echo "Fetching HCP API Token..."
          HCP_API_TOKEN=$(curl --location "https://auth.idp.hashicorp.com/oauth2/token" \
          --header "Content-Type: application/x-www-form-urlencoded" \
          --data-urlencode "client_id=$HCP_CLIENT_ID" \
          --data-urlencode "client_secret=$HCP_CLIENT_SECRET" \
          --data-urlencode "grant_type=client_credentials" \
          --data-urlencode "audience=https://api.hashicorp.cloud" | jq -r .access_token)
          echo "HCP_API_TOKEN=$HCP_API_TOKEN" >> $GITHUB_ENV
          echo "HCP API Token fetched successfully."

      # Step 4: Fetch secrets from HCP
      - name: Fetch secrets from HCP
        id: fetch-secrets
        env:
          HCP_API_TOKEN: ${{ env.HCP_API_TOKEN }}
        run: |
          echo "Fetching secrets from HCP..."
          response=$(curl --location "https://api.cloud.hashicorp.com/secrets/2023-11-28/organizations/bfd3ae55-9cb4-4442-a8f0-f0107a61dba1/projects/5fb3db9a-1ad2-4ebe-a7b9-63e24483a202/apps/laravel-github-action/secrets:open" \
          --header "Authorization: Bearer $HCP_API_TOKEN")
          echo "Response from HCP: $response"
          echo "$response" | jq -r '.secrets[] | .name + "=" + .static_version.value' > secrets.env
          cat secrets.env
          set -a
          source secrets.env
          set +a
          echo "Secrets fetched and sourced successfully."


      # Step 7: Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 8: Build Docker image
      - name: Build Docker image
        run: |
          echo "Building Docker image..."
          docker build -t ${{ secrets.DOCKER_IMAGE_NAME }}:latest .
          docker tag ${{ secrets.DOCKER_IMAGE_NAME }}:latest ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest
          echo "Docker image built and tagged successfully."

      # Step 9: Push Docker image to DockerHub
      - name: Push Docker image
        run: |
          echo "Pushing Docker image to DockerHub..."
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest
          echo "Docker image pushed to DockerHub successfully."

      # Step 10: Deploy to Home Server via SSH
      - name: Deploy to Home Server
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.HOME_SERVER_HOST }}
          username: ${{ secrets.HOME_SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            echo "Deploying to Home Server..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest
            docker stop laravel-container || true
            docker rm laravel-container || true
            docker run -d --name laravel-container -p 9090:80 ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest
            echo "Deployment to Home Server completed successfully."
            echo "Checking Docker container status..."
            docker ps -a
            echo "Checking if the server is responding..."