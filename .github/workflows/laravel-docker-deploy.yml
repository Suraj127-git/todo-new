name: Laravel Docker Deploy

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up PHP
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'

      # Step 3: Fetch HCP API Token
      - name: Fetch HCP API Token
        id: fetch-hcp-token
        run: |
          echo "Fetching HCP API Token..."
          HCP_API_TOKEN=$(curl --request POST \
          --url https://auth.hashicorp.com/oauth/token \
          --data-urlencode "client_id=$HCP_CLIENT_ID" \
          --data-urlencode "client_secret=$HCP_CLIENT_SECRET" \
          --data-urlencode "grant_type=client_credentials" \
          --data-urlencode "audience=https://api.hashicorp.cloud" | jq -r .access_token)
          echo "HCP_API_TOKEN=$HCP_API_TOKEN" >> $GITHUB_ENV
          echo "HCP API Token fetched successfully."

      # Step 4: Fetch secrets from HCP
      - name: Fetch secrets from HCP
        id: fetch-secrets
        env:
          HCP_API_TOKEN: ${{ env.HCP_API_TOKEN }}
        run: |
          echo "Fetching secrets from HCP..."
          response=$(curl --location "https://api.cloud.hashicorp.com/secrets/2023-11-28/organizations/bfd3ae55-9cb4-4442-a8f0-f0107a61dba1/projects/5fb3db9a-1ad2-4ebe-a7b9-63e24483a202/apps/laravel-github-action/secrets:open" \
          --header "Authorization: Bearer $HCP_API_TOKEN")
          echo "Response from HCP: $response"
          echo "$response" | jq -r '.secrets[] | .name + "=" + .static_version.value' > secrets.env
          cat secrets.env
          set -a
          source secrets.env
          set +a
          echo "Secrets fetched and sourced successfully."

      # Step 5: Install Composer dependencies
      - name: Install Composer dependencies
        run: |
          echo "Installing Composer dependencies..."
          composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader
          echo "Composer dependencies installed successfully."

      # Step 7: Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        env:
          APP_ENV: testing
          COMPOSER_PROCESS_TIMEOUT: 0
          COMPOSER_NO_INTERACTION: 1
          COMPOSER_NO_AUDIT: 1
          HCP_API_TOKEN: ${{ env.HCP_API_TOKEN }}

      # Step 8: Build Docker image
      - name: Build Docker image
        run: |
          echo "Building Docker image..."
          docker build -t ${{ env.DOCKER_IMAGE_NAME }}:latest .
          docker tag ${{ env.DOCKER_IMAGE_NAME }}:latest ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest
          echo "Docker image built and tagged successfully."

      # Step 9: Push Docker image to DockerHub
      - name: Push Docker image
        run: |
          echo "Pushing Docker image to DockerHub..."
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest
          echo "Docker image pushed to DockerHub successfully."

      # Step 10: Deploy to Home Server via SSH
      - name: Deploy to Home Server
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.HOME_SERVER_HOST }}
          username: ${{ secrets.HOME_SERVER_USER }}
          script: |
            echo "Deploying to Home Server..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest
            docker stop laravel-container || true
            docker rm laravel-container || true
            docker run -d --name laravel-container -p 8080:80 ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest
            echo "Deployment to Home Server completed successfully."
